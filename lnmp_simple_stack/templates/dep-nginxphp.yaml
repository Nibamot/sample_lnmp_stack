apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-php-deployment
  name: nginx-php-deployment
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      app: nginx-php-deployment
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx-php-deployment
    spec:
      containers:
      - image: {{.Values.image.repositoryone}}
        name: nginx
        resources: 
          limits:
            cpu: {{.Values.resources.limits.cpu}}
          requests:
            cpu: {{.Values.resources.requests.cpu}}
        volumeMounts:
        - mountPath: "/var/www/html"
          name: data-store-pv
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
  
      - image: {{.Values.image.repositorytwo}}
        name: phpapp
        imagePullPolicy: Never
        resources: 
          limits:
            cpu: {{.Values.resources.limits.cpu}}
          requests:
            cpu: {{.Values.resources.requests.cpu}}
        volumeMounts:
        - mountPath: "/var/www/html"
          name: data-store-pv
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: php-secret
              key: mysql_root_password
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: php-config
              key: mysql_database
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              name: php-config
              key: mysql_host
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: php-config
              key: mysql_user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: php-secret
              key: mysql_password
      volumes:
      - name: data-store-pv
        persistentVolumeClaim:
          claimName: data-store-pv-claim
      - name: nginx-config-volume
        configMap:
          name: nginx-config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-php-deployment
  name: nginx-php-svc
  namespace: default
spec:
  ports:
  - nodePort: {{.Values.service.nodePort}}
    port: {{.Values.service.port}}
    protocol: TCP
    targetPort: {{.Values.service.port}}
  selector:
    app: nginx-php-deployment
  sessionAffinity: None
  type: {{.Values.service.type}}
status:
  loadBalancer: {}
